{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { thunkDecrementValue, thunkChangeByValue, thunkIncrementValue, thunkInputValue } from './thunks';\nconst initialState = {\n  value: 0,\n  isLoading: false,\n  input: 0\n};\nexport const valueSlice = createSlice({\n  name: 'incriment',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(thunkIncrementValue.fulfilled, (state, action) => {\n      state.value = action.payload;\n    });\n    builder.addCase(thunkDecrementValue.fulfilled, (state, action) => {\n      state.value = action.payload;\n    });\n    builder.addCase(thunkChangeByValue.fulfilled, (state, action) => {\n      state.value = action.payload;\n    });\n    builder.addCase(thunkInputValue.fulfilled, (state, action) => {\n      state.input = action.payload;\n    });\n  }\n});\nexport default valueSlice.reducer;","map":{"version":3,"names":["createSlice","thunkDecrementValue","thunkChangeByValue","thunkIncrementValue","thunkInputValue","initialState","value","isLoading","input","valueSlice","name","reducers","extraReducers","builder","addCase","fulfilled","state","action","payload","reducer"],"sources":["/home/msi/Рабочий стол/задачки/testSomeWhere/src/redux/slicesAndThunks/slices.ts"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { thunkDecrementValue, thunkChangeByValue, thunkIncrementValue, thunkInputValue } from './thunks';\n\nconst initialState: {\n    value: number,\n    isLoading: boolean,\n    input: number\n} = {\n    value: 0,\n    isLoading: false,\n    input: 0\n}\n\nexport const valueSlice = createSlice({\n    name: 'incriment',\n    initialState,\n    reducers: {\n    },\nextraReducers: (builder) => {\n    builder.addCase(thunkIncrementValue.fulfilled, (state, action)=> {\n        state.value = action.payload\n    });\n\n    builder.addCase(thunkDecrementValue.fulfilled, (state, action)=> {\n        state.value = action.payload\n    })\n  \n    builder.addCase(thunkChangeByValue.fulfilled, (state, action)=> {\n        state.value = action.payload\n    })\n    builder.addCase(thunkInputValue.fulfilled, (state, action)=> {\n        state.input = action.payload\n    })\n        \n\n} \n})\n\n\nexport default valueSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,mBAAmB,EAAEC,kBAAkB,EAAEC,mBAAmB,EAAEC,eAAe,QAAQ,UAAU;AAExG,MAAMC,YAIL,GAAG;EACAC,KAAK,EAAE,CAAC;EACRC,SAAS,EAAE,KAAK;EAChBC,KAAK,EAAE;AACX,CAAC;AAED,OAAO,MAAMC,UAAU,GAAGT,WAAW,CAAC;EAClCU,IAAI,EAAE,WAAW;EACjBL,YAAY;EACZM,QAAQ,EAAE,CACV,CAAC;EACLC,aAAa,EAAGC,OAAO,IAAK;IACxBA,OAAO,CAACC,OAAO,CAACX,mBAAmB,CAACY,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAI;MAC7DD,KAAK,CAACV,KAAK,GAAGW,MAAM,CAACC,OAAO;IAChC,CAAC,CAAC;IAEFL,OAAO,CAACC,OAAO,CAACb,mBAAmB,CAACc,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAI;MAC7DD,KAAK,CAACV,KAAK,GAAGW,MAAM,CAACC,OAAO;IAChC,CAAC,CAAC;IAEFL,OAAO,CAACC,OAAO,CAACZ,kBAAkB,CAACa,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAI;MAC5DD,KAAK,CAACV,KAAK,GAAGW,MAAM,CAACC,OAAO;IAChC,CAAC,CAAC;IACFL,OAAO,CAACC,OAAO,CAACV,eAAe,CAACW,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAI;MACzDD,KAAK,CAACR,KAAK,GAAGS,MAAM,CAACC,OAAO;IAChC,CAAC,CAAC;EAGN;AACA,CAAC,CAAC;AAGF,eAAeT,UAAU,CAACU,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}