{"ast":null,"code":"import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { ValueService, InputService } from \"../services/services\";\nexport const thunkIncrementValue = createAsyncThunk('valueSlice/thunkIncrementValue', async value => {\n  const additional = 1;\n  return await ValueService.getValue({\n    value,\n    additional\n  });\n});\nexport const thunkDecrementValue = createAsyncThunk('valueSlice/thunkDecrementValue', async value => {\n  const additional = -1;\n  return await ValueService.getValue({\n    value,\n    additional\n  });\n});\nexport const thunkChangeByValue = createAsyncThunk('valueSlice/thunkChangeValue', async _ref => {\n  let {\n    value,\n    additional\n  } = _ref;\n  return await ValueService.getValue({\n    value,\n    additional\n  });\n});\nexport const thunkInputValue = createAsyncThunk('inputSlice/thunkInputValue', async input => await InputService.getInput(input));","map":{"version":3,"names":["createAsyncThunk","ValueService","InputService","thunkIncrementValue","value","additional","getValue","thunkDecrementValue","thunkChangeByValue","_ref","thunkInputValue","input","getInput"],"sources":["/home/msi/Рабочий стол/задачки/testSomeWhere/src/redux/slicesAndThunks/thunks.ts"],"sourcesContent":["import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport {ValueService, InputService} from \"../services/services\";\n\nexport const thunkIncrementValue = createAsyncThunk(\n    'valueSlice/thunkIncrementValue',\n    async (value:number) => \n    {const additional = 1;        \n    return await ValueService.getValue({value, additional})      \n    }\n  );\n\n  export const thunkDecrementValue = createAsyncThunk(\n    'valueSlice/thunkDecrementValue',\n    async (value:number) => {\n      const additional = -1\n      return await ValueService.getValue({value, additional})      \n    }\n  );\n  export const thunkChangeByValue = createAsyncThunk(\n    'valueSlice/thunkChangeValue',\n    async ({value, additional}: {value:number, additional:number}) => \n      await ValueService.getValue({value, additional})      \n    \n  );\n\n  export const thunkInputValue = createAsyncThunk(\n    'inputSlice/thunkInputValue',\n    async (input:number) => \n     await InputService.getInput(input)\n\n  );\n\n"],"mappings":"AAAA,SAASA,gBAAgB,QAAQ,kBAAkB;AACnD,SAAQC,YAAY,EAAEC,YAAY,QAAO,sBAAsB;AAE/D,OAAO,MAAMC,mBAAmB,GAAGH,gBAAgB,CAC/C,gCAAgC,EAChC,MAAOI,KAAY,IACnB;EAAC,MAAMC,UAAU,GAAG,CAAC;EACrB,OAAO,MAAMJ,YAAY,CAACK,QAAQ,CAAC;IAACF,KAAK;IAAEC;EAAU,CAAC,CAAC;AACvD,CACF,CAAC;AAED,OAAO,MAAME,mBAAmB,GAAGP,gBAAgB,CACjD,gCAAgC,EAChC,MAAOI,KAAY,IAAK;EACtB,MAAMC,UAAU,GAAG,CAAC,CAAC;EACrB,OAAO,MAAMJ,YAAY,CAACK,QAAQ,CAAC;IAACF,KAAK;IAAEC;EAAU,CAAC,CAAC;AACzD,CACF,CAAC;AACD,OAAO,MAAMG,kBAAkB,GAAGR,gBAAgB,CAChD,6BAA6B,EAC7B,MAAAS,IAAA;EAAA,IAAO;IAACL,KAAK;IAAEC;EAA6C,CAAC,GAAAI,IAAA;EAAA,OAC3D,MAAMR,YAAY,CAACK,QAAQ,CAAC;IAACF,KAAK;IAAEC;EAAU,CAAC,CAAC;AAAA,CAEpD,CAAC;AAED,OAAO,MAAMK,eAAe,GAAGV,gBAAgB,CAC7C,4BAA4B,EAC5B,MAAOW,KAAY,IAClB,MAAMT,YAAY,CAACU,QAAQ,CAACD,KAAK,CAEpC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}